# roles/samba/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- block:
    - name: Configure kerberos
      ini_file:
        path: /etc/krb5.conf
        section: libdefaults
        option: "{{ opt.name }}"
        value: "{{ opt.value }}"
      loop_control:
        loop_var: opt
      register: _krb5_conf
      with_items:
        - {'name': 'dns_lookup_kdc', 'value': 'true'}
        - {'name': 'dns_lookup_realm', 'value': 'false'}
        - {'name': 'default_realm', 'value': "{{ openio_samba_active_directory.domain_name | upper }}" }
    
    - name: Configure resolv.conf
      template:
        src: resolv.conf.j2
        dest: /etc/resolv.conf
      register: _resolv_conf

    - name: Add entry in /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ openio_samba_active_directory.samba_address }} \
          {{ openio_samba_server_name }}.{{ openio_samba_active_directory.domain_name }} \
          {{ openio_samba_server_name }}"

    - name: Update /etc/nsswitch.conf 
      lineinfile:
        path: /etc/nsswitch.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}" 
      with_items: 
        - { regexp: '^passwd:.*', line: 'passwd: files winbind' } 
        - { regexp: '^group:.*', line: 'group: files winbind' } 


  when: openio_samba_active_directory


- name: Check running CTDB
  command: 'pidof ctdbd'
  changed_when: false
  failed_when: false
  register: _ctdb_running
  when: openio_samba_ctdb

- block:
    - name: CTDB - Ensure lock directory exists
      file:
        path: "{{ openio_samba_ctdb_recovery_lock | dirname }}"
        state: directory
        mode: 0755

    - name: CTDB - Configuration
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - { src: 'ctdb.conf.j2', dest: '/etc/ctdb/ctdbd.conf' }
        - { src: 'ctdb.nodes.j2', dest: '{{ ctdb_nodes }}' }
        - { src: 'public_addresses.j2', dest: '{{ ctdb_public_addresses }}' }
  when:
    - openio_samba_ctdb

- block:
    - name: CTDB - service
      service:
        name: "{{ item }}"
        state: "{{ openio_samba_ctdb_service_state }}"
        enabled: "{{ openio_samba_ctdb_service_enabled }}"
      with_items: "{{ ctdb_services }}"

    - name: CTDB - Ensure lock directory exists
      file:
        path: "{{ openio_samba_ctdb_recovery_lock | dirname }}"
        state: directory
        mode: 0755
  when:
    - openio_samba_ctdb
    - _ctdb_running.rc is defined
    - _ctdb_running.rc != 0

- name: Check running SAMBA
  command: "pidof {{ samba_service_name }}"
  changed_when: false
  failed_when: false
  register: _samba_running

- name: SAMBA - Configuration
  template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    mode: 0644
    owner: root
    group: root
    validate: 'testparm -s %s'

- name: Add node to Active Directory
  command: "net ads join -U '{{openio_samba_active_directory.admin }}%{{ openio_samba_active_directory.password }}'"
  run_once: true
  when: openio_samba_active_directory


- name: SAMBA - service
  service:
    name: "{{ item }}"
    state: "{{ openio_samba_service_state }}"
    enabled: "{{ openio_samba_service_enabled }}"
  with_items: "{{ samba_services }}"
  when:
    - _samba_running.rc is defined
    - _samba_running.rc != 0
...
